version: '2.4'

# Templates:
x-base: &base-service-template
  init: true
  networks:
    local:

services:

  portainer:
    <<: *base-service-template
    image: portainer/portainer:latest
    container_name: portainer.ctn
    command: -p :80
    ports:
      - "9000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  sqlserver:
    <<: *base-service-template
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: sqlserver.ctn
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQLSERVER_SA_PASSWORD:-Password1!}
    ports:
      - "1433:1433"
    healthcheck:
      test: ./opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Password1! -Q "SELECT 1" || exit 1
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 3s

  mongo:
    <<: *base-service-template
    image: mongo:latest
    container_name: mongo
    command: >
      sh -c "mongod --bind_ip 0.0.0.0 --port 80"
    ports:
      - "27017:80"
    healthcheck:
      test: echo 'db.stats().ok' | mongo mongo:80 --quiet
      interval: 5s
      timeout: 3s
      retries: 3

  shower:
    <<: *base-service-template
    image: mirzamerdovic/shower:latest
    container_name: shower.ctn
    environment:
      - SERVER_INSTANCE=sqlserver
      - USER_ID=sa
      - PASSWORD=Password1!
    depends_on:
      - sqlserver
    stdin_open: true
    tty: true
    volumes:
      - ./SqlScripts/:/opt/mssql-tools/shower
    healthcheck:
      test: ./bin/sqlcmd -S sqlserver -U sa -P Password1! -Q "SELECT 1" || exit 1
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 3s

  unicorn:
    <<: *base-service-template
    image: mirzamerdovic/unicorn:1.1.0
    container_name: unicorn.ctn
    environment:
      - MONGO_ADDRESS=mongo:80
      - RECREATE_COLLECTIONS=true
    depends_on:
      - mongo
    volumes:
      - type: bind
        source: ./MongoScripts
        target: /imports
        read_only: true
    healthcheck:
      test: echo 'db.stats().ok' | mongo mongo --quiet
      interval: 15s
      timeout: 3s
      retries: 3
      start_period: 1s

  rooster:
    <<: *base-service-template
    #image: mirzamerdovic/rooster:1.0.0
    container_name: rooster
    build:
      context: .
      dockerfile: Rooster.App/Dockerfile
    environment:
      - "Hosts:AppHostOptions:DatabaseEngine=Slack"
      - "Hosts:AppHostOptions:UseInternalPoller=true"
      - "Hosts:AppHostOptions:PoolingIntervalInSeconds=60"
      - "Hosts:AppHostOptions:CurrentDateVariance=5"

      - "Slack:WebHookReporterOptions:Url=services/TQCU0B4F4/B016UTQ3TPT/VvX207y6qL6IiqY5arnVJezE"
      - "Slack:WebHookReporterOptions:TimeoutInMs=3000"
      - "Slack:WebHookReporterOptions:Headers:0:Name=User-Agent"
      - "Slack:WebHookReporterOptions:Headers:0:Value=Rooster App"

      - "Adapters:KuduAdapterOptions:0:User=$$bf-studioapi-sandbox"
      - "Adapters:KuduAdapterOptions:0:Password=vuicJaYWb9lzK1snu0mD1my8SJ6mkAofemR4LwtCcwmMqYqTG6Cplwkd28qH"
      - "Adapters:KuduAdapterOptions:0:BaseUri=https://bf-studioapi-sandbox.scm.azurewebsites.net/"
networks:
  local:
    name: local

volumes:
  portainer_data: